package domain_ports

import (
	"context"
)

// LLM defines operations for LLM-based text processing (e.g. summarization, completion, Q&A, extraction)
type LLM interface {
	// GenerateCompletion generates a completion for the given prompt or text.
	GenerateCompletion(ctx context.Context, prompt string) (string, error)

	// GenerateSummary generates a concise summary for the given text.
	GenerateSummary(ctx context.Context, text string) (string, error)

	// AnswerQuestion answers a question given a context and a question string.
	AnswerQuestion(ctx context.Context, context []string, question string) (string, error)

	// ExtractKeywords extracts keywords from the given text.
	ExtractKeywords(ctx context.Context, text string) ([]string, error)
}

// EmbeddingModel defines operations for generating vector embeddings
type EmbeddingModel interface {
	// GenerateEmbedding generates a vector embedding for the given text.
	GenerateEmbedding(ctx context.Context, text string) ([]float32, error)

	// GenerateEmbeddings generates vector embeddings for a batch of texts.
	GenerateEmbeddings(ctx context.Context, texts []string) ([][]float32, error)

	// GetEmbeddingDimension returns the dimension of the embeddings generated by this service.
	GetEmbeddingDimension() uint64
}
