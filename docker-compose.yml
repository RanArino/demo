services:
  ms_user:
    build:
      context: ./ms_user
      dockerfile: Dockerfile
    ports:
      - "50051:50051"  # gRPC server
      - "8081:8081"    # HTTP webhook server
    env_file:
      - ./ms_user/.env.local
    environment:
      - GRPC_PORT=50051
      - WEBHOOK_PORT=8081
      - DATABASE_URL=${DATABASE_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_WEBHOOK_SECRET=${CLERK_WEBHOOK_SECRET}
    restart: unless-stopped
    networks:
      - app-network


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
    ports:
      - "3002:3002"
    env_file:
      - ./frontend/.env.local
    environment:
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
      - NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
      - NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/profile/setup
      - NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/profile/setup
      - MS_USER_GRPC_URL_INTERNAL=ms_user:50051
    depends_on:
      - ms_user
    restart: unless-stopped
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "ms_user:8081"
      - "--log=stdout"
      - "--log-level=info"
      - "--domain=${NGROK_STATIC_DOMAIN}"
    env_file:
      - ./.env.local
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - ms_user
    networks:
      - app-network


  # envoy:
  #   image: envoyproxy/envoy:v1.28-latest
  #   ports:
  #     - "8080:8080"  # gRPC-Web proxy port
  #     - "9901:9901"  # Envoy admin interface
  #   volumes:
  #     - ./envoy.yaml:/etc/envoy/envoy.yaml:ro
  #   environment:
  #     - MS_USER_ADDRESS=ms_user
  #     - MS_USER_PORT=50051
  #   depends_on:
  #     - ms_user
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  # qdrant:
  #   image: qdrant/qdrant:latest
  #   ports:
  #     - "6333:6333"
  #     - "6334:6334"
  #   volumes:
  #     - qdrant_data:/qdrant/storage
  #   restart: unless-stopped
  #   networks:
  #     - app-network

# volumes:
#   qdrant_data:

networks:
  app-network:
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: 172.25.0.0/16
        - subnet: 2001:db8:2::/64
